variables:
  # Update container image to use in staging for a given service. Triggered from each
  # repo's CI on merges to <repo>/staging. Requires SYNC_CONTAINER_NAME and SYNC_IMAGE_TAG
  TRIGGER_SYNC_STAGING_COMPONENT: "false"
  SYNC_CONTAINER_NAME: "unknown"
  SYNC_IMAGE_TAG: "unknown"

stages:
  - build
  - test
  - staging-deploy-poc
  - publish

include:
  - project: 'Northern.tech/Mender/mendertesting'
    file: '.gitlab-ci-check-commits-signoffs.yml'
  - project: 'Northern.tech/Mender/mendertesting'
    file: '.gitlab-ci-check-license.yml'
  - project: 'Northern.tech/Mender/mendertesting'
    file: '.gitlab-ci-github-status-updates.yml'

build:
  stage: build
  image: debian:buster
  before_script:
    - apt-get update -y
    - apt-get install -y curl make
    - curl -L https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3 | DESIRED_VERSION="v3.8.2" bash
  script:
    - make lint
    - make package
  artifacts:
    expire_in: 2w
    paths:
      - mender-*.tgz

.get_kubectl_and_tools: &get_kubectl_and_tools
  # Install kubectl
  - apt update && apt install -yyq curl
  - curl -LO https://storage.googleapis.com/kubernetes-release/release/v1.23.6/bin/linux/amd64/kubectl
  - chmod +x ./kubectl
  - mv ./kubectl /usr/local/bin/kubectl
  # Install AWS CLI and aws-iam-authenticator
  - apt install -yyq awscli
  - curl -o aws-iam-authenticator https://amazon-eks.s3.us-west-2.amazonaws.com/1.15.10/2020-02-22/bin/linux/amd64/aws-iam-authenticator
  - chmod +x ./aws-iam-authenticator
  - mv ./aws-iam-authenticator /usr/local/bin/aws-iam-authenticator
  # Install kubectx
  - apt install -yyq kubectx

.setup_eks_cluster_staging: &setup_eks_cluster_staging
  # Configure AWS CLI for staging cluster
  - export AWS_ACCESS_KEY_ID=$CI_JOBS_AWS_ACCESS_KEY_ID_STAGING
  - export AWS_SECRET_ACCESS_KEY=$CI_JOBS_AWS_SECRET_ACCESS_KEY_STAGING
  - export AWS_DEFAULT_REGION=$CI_JOBS_AWS_REGION_STAGING
  - aws eks --region $CI_JOBS_AWS_REGION_STAGING update-kubeconfig --name $CI_JOBS_AWS_EKS_CLUSTER_NAME_STAGING
  - kubectl config set-context --current --namespace=mender-helm-tests

.setup_s3_helm_chart_repo: &setup_s3_helm_chart_repo
  # Configure AWS CLI for the S3 repository
  - export AWS_ACCESS_KEY_ID=$S3_HELM_CHART_REPO_AWS_ACCESS_KEY_ID
  - export AWS_SECRET_ACCESS_KEY=$S3_HELM_CHART_REPO_AWS_SECRET_ACCESS_KEY
  - export AWS_DEFAULT_REGION=$S3_HELM_CHART_REPO_AWS_REGION
  - export AWS_S3_SSE=AES256

test:helm_chart_install:
  rules:
    - if: '$CI_COMMIT_BRANCH == "master" || $CI_COMMIT_BRANCH == "master-next" || $RUN_HELM_CHART_INSTALL == "true" || $CI_COMMIT_TAG'
  stage: test
  dependencies:
    - build
  image: debian:buster
  before_script:
    - *get_kubectl_and_tools
    - *setup_eks_cluster_staging
    # Install test dependencies
    - apt install -yyq make uuid-runtime
    - tests/ci-deps-k8s.sh
    # Clean possible leftovers from an unfinished run
    - tests/ci-test-teardown.sh || true
    - tests/ci-make-clean.sh || true
  script:
    - tests/ci-make-deps.sh
    - tests/ci-make-helm.sh
    - make test
  after_script:
    - *setup_eks_cluster_staging
    - tests/ci-make-clean.sh

    - aws cloudfront create-invalidation --distribution-id ${S3_HELM_CHART_CDN_DISTRIBUTION_ID} --paths "/*"
helm-version-bump:staging-component:
  only:
    variables:
      - $TRIGGER_SYNC_STAGING_COMPONENT == "true"
  stage: staging-deploy-poc
  image: debian:bullseye
  before_script:
    - apt update && apt install -yyq git wget
    - |
      echo "INFO - installing yq"
      wget https://github.com/mikefarah/yq/releases/download/v4.33.2/yq_linux_amd64.tar.gz -O - |\
      tar xz && mv yq_linux_amd64 /usr/bin/yq
    # Prepare SSH key
    - eval $(ssh-agent -s)
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add - > /dev/null
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - ssh-keyscan github.com >> ~/.ssh/known_hosts
    # Configure git
    - git config --global user.email "mender@northern.tech"
    - git config --global user.name "Mender Test Bot"
  script:
    # Add GitHub repo
    - git remote add github git@github.com:mendersoftware/mender-helm.git
      #- git fetch github staging:staging-overlay-version-bump
    - git fetch github MC-6387-helm-staging-poc:staging-overlay-version-bump
    - git checkout staging-overlay-version-bump
    # todo: version bump
    - "echo Mender container: $SYNC_CONTAINER_NAME"
    - "echo Image version: $SYNC_IMAGE_TAG"
    - |
      echo "INFO - mapping source project to values.yaml project:"
      case $SYNC_CONTAINER_NAME in
        placeholder-tobefound)
          VALUES_REF="generate_delta_worker"
          ;;
        *)
          VALUES_REF_TMP=${SYNC_CONTAINER_NAME#"mender-"}  #removes prefix: mender-
          VALUES_REF=${VALUES_REF_TMP//-/_} #replaces - with _
      esac
      echo "DEBUG - container name inside values file: ${VALUES_REF}"
    - |
      echo "INFO - bumping version ${SYNC_IMAGE_TAG} to ${VALUES_REF} container: "
      THIS_KEY=".${VALUES_REF}.image.tag" THIS_VALUE="${SYNC_IMAGE_TAG}" yq -i 'eval(strenv(THIS_KEY)) = strenv(THIS_VALUE)' mender/values.yaml
      git add mender/values.yaml
    - |
      echo "INFO - bumping helm chart version"
      FULL_VERSION=$(yq ".version" mender/Chart.yaml)
      MAJOR_VERSION=$(echo $FULL_VERSION | cut -f1 -d.)
      MINOR_VERSION=$(echo $FULL_VERSION | cut -f2 -d.)
      THIS_VALUE="${MAJOR_VERSION}.${MINOR_VERSION}.${HELM_PATCH_VERSION}" yq -i '.version = strenv(THIS_VALUE)' mender/Chart.yaml
      git add mender/Chart.yaml
    # Commit
    - git commit -sm "[Mender CI/CD] bump helm chart at MC-6387-helm-staging-poc"
    # Push (5 retries)
    - for retry in $(seq 5); do
    -   if git push github staging-overlay-version-bump:MC-6387-helm-staging-poc; then
    -     exit 0
    -   fi
    -   git fetch github MC-6387-helm-staging-poc
    -   git rebase github/MC-6387-helm-staging-poc
    - done
    - exit 1


publish:helm_chart_publishing:
  rules:
    - if: '$CI_COMMIT_TAG'
      changes:
        - mender/Chart.yaml
      when: manual
  stage: publish
  dependencies:
    - build
  image: debian:buster
  before_script:
    - apt-get update -y
    - apt-get install -y curl make git
    - curl -L https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3 | DESIRED_VERSION="v3.8.2" bash
    - *get_kubectl_and_tools
    - helm plugin install https://github.com/hypnoglow/helm-s3.git --version 0.14.0
    - *setup_s3_helm_chart_repo
  script:
    - helm repo add mender s3://${S3_HELM_CHART_REPO}
    - helm s3 push --acl="public-read" --relative --timeout=60s ./mender-*.tgz mender
    - aws cloudfront create-invalidation --distribution-id ${S3_HELM_CHART_CDN_DISTRIBUTION_ID} --paths "/*"
