{{- if and .Values.devicemonitor.enabled .Values.global.enterprise }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: devicemonitor
  namespace: {{ .Release.Namespace }}
  labels:
    app.kubernetes.io/name: devicemonitor
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/component: devicemonitor
    app.kubernetes.io/part-of: mender
    helm.sh/chart: "{{ .Chart.Name }}"
spec:
  replicas: {{ .Values.devicemonitor.replicas }}
  selector:
    matchLabels:
      app.kubernetes.io/name: devicemonitor

  # if deployment is not completed within 10 min, consider it failed,
  # as result deployment Reason=ProgressDeadlineExceeded
  # needs to be big enough to rollout to complete
  progressDeadlineSeconds: 600

  # Rollout upgrade one by one
  # In this case we warranty there are always instances online.
  # In case any issues, they will be detected early and deployment be stopped.
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1

  template:
    metadata:
      {{- with .Values.devicemonitor.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        app.kubernetes.io/name: devicemonitor
    spec:
      {{- with .Values.devicemonitor.affinity }}
      affinity: {{ tpl (toYaml .) $ | nindent 8 }}
      {{- end }}

      containers:
      - name: devicemonitor
        image: {{ .Values.devicemonitor.image.registry }}/{{ .Values.devicemonitor.image.repository }}:{{ .Values.devicemonitor.image.tag }}
        imagePullPolicy: {{ .Values.devicemonitor.image.imagePullPolicy }}
        resources:
{{ toYaml .Values.devicemonitor.resources | indent 10 }}

{{- if .Values.devicemonitor.automigrate }}
        args: ["server", "--automigrate"]
{{- else -}}
        args: ["server"]
{{- end }}

        # Readiness/liveness probes
        readinessProbe:
           httpGet:
             path: /api/internal/v1/devicemonitor/health
             port: 8080
           periodSeconds: 15
        livenessProbe:
          httpGet:
            path: /api/internal/v1/devicemonitor/alive
            port: 8080
          periodSeconds: 5
        startupProbe:
          httpGet:
            path: /api/internal/v1/devicemonitor/alive
            port: 8080
          failureThreshold: 36
          periodSeconds: 5

        env:
        # Workflows orchestrator address
        - name: DEVICEMONITOR_USERADM_URL
          value: {{ .Values.device_auth.env.DEVICEMONITOR_USERADM_URL | quote }}

        # Workflows orchestrator address
        - name: DEVICEMONITOR_WORKFLOWS_URL
          value: {{ .Values.device_auth.env.DEVICEMONITOR_WORKFLOWS_URL | quote }}

        # Supported configuration settings: https://github.com/mendersoftware/devicemonitor/blob/master/config.yaml
        # Set in order, last value for the key will be used in case duplications.
        envFrom:
        - prefix: DEVICEMONITOR_
          secretRef:
            name: mongodb-common

{{- if .Values.global.image.username }}
      imagePullSecrets:
      - name: docker-registry
{{- end }}

{{- with .Values.devicemonitor.nodeSelector }}
      nodeSelector: {{ toYaml . | nindent 8 }}
{{- end }}
{{- end }}
