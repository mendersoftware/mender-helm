{{- if .Values.api_gateway.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: api-gateway
  namespace: {{ .Release.Namespace }}
  labels:
    app.kubernetes.io/name: api-gateway
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/component: api-gateway
    app.kubernetes.io/part-of: mender
    helm.sh/chart: "{{ .Chart.Name }}"
spec:
  replicas: {{ .Values.api_gateway.replicas }}
  selector:
    matchLabels:
      app.kubernetes.io/name: api-gateway

  # if deployment is not completed within 10 min, consider it failed,
  # as result deployment Reason=ProgressDeadlineExceeded
  # needs to be big enough to rollout to complete
  progressDeadlineSeconds: 600

  # Rollout upgrade one by one
  # In this case we warranty there are always instances online.
  # In case any issues, they will be detected early and deployment be stopped.
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1

  template:
    metadata:
      labels:
        app.kubernetes.io/name: api-gateway
    spec:
      {{- with .Values.api_gateway.affinity }}
      affinity: {{ tpl (toYaml .) $ | nindent 8 }}
      {{- end }}

      containers:
      - name: api-gateway
      ***REMOVED*** {{ .Values.api_gateway.image.registry }}/{{ .Values.api_gateway.image.repository }}:{{ .Values.api_gateway.image.tag }}
        imagePullPolicy: {{ .Values.useradm.image.imagePullPolicy }}
        resources:
{{ toYaml .Values.api_gateway.resources | indent 10 }}

        ports:
        - containerPort: 443
        - containerPort: 80

        # Readiness/liveness probes
        livenessProbe:
          tcpSocket:
            port: 80
          periodSeconds: 5
        readinessProbe:
          tcpSocket:
            port: 80
          periodSeconds: 15

        env:
        {{- if .Values.global.multitenant }}
        - name: HAVE_MULTITENANT
          value: {{ .Values.global.multitenant | quote }}
        {{- end }}
        - name: DNS_NAMES
          value: {{ .Values.api_gateway.env.DNS_NAMES | quote }}
        - name: IS_LOGS_FORMAT_JSON
          value: {{ .Values.api_gateway.env.IS_LOGS_FORMAT_JSON | quote }}
        - name: ALLOWED_HOSTS
          value: {{ .Values.api_gateway.env.ALLOWED_HOSTS | quote }}

        volumeMounts:
        - name: certs
          mountPath: /var/www/mendersoftware/cert/
          readOnly: true
        - name: dhparam
          mountPath: /usr/local/openresty/nginx/conf/dhparam.pem
          subPath: dhparam.pem
          readOnly: true

      volumes:
      - name: certs
        secret:
          secretName: api-gateway
      - name: dhparam
        secret:
          secretName: api-gateway

{{- if .Values.global.image.username }}
      imagePullSecrets:
      - name: docker-registry
{{- end }}
{{- end }}
