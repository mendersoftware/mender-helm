{{- if .Values.api_gateway.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: api-gateway
  namespace: {{ .Release.Namespace }}
  labels:
    app.kubernetes.io/name: api-gateway
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/component: api-gateway
    app.kubernetes.io/part-of: mender
    helm.sh/chart: "{{ .Chart.Name }}"
spec:
  replicas: {{ .Values.api_gateway.replicas }}
  selector:
    matchLabels:
      app.kubernetes.io/name: api-gateway

  # if deployment is not completed within 10 min, consider it failed,
  # as result deployment Reason=ProgressDeadlineExceeded
  # needs to be big enough to rollout to complete
  progressDeadlineSeconds: 600

  # Rollout upgrade one by one
  # In this case we warranty there are always instances online.
  # In case any issues, they will be detected early and deployment be stopped.
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1

  template:
    metadata:
      {{- with .Values.api_gateway.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        app.kubernetes.io/name: api-gateway
    spec:
      {{- with .Values.api_gateway.affinity }}
      affinity: {{ tpl (toYaml .) $ | nindent 8 }}
      {{- end }}

      containers:
      - name: api-gateway
        image: {{ .Values.api_gateway.image.registry }}/{{ .Values.api_gateway.image.repository }}:{{ .Values.api_gateway.image.tag }}
        imagePullPolicy: {{ .Values.api_gateway.image.imagePullPolicy }}
        args:
            - --accesslog=true
            - --accesslog.format=json
{{- if .Values.api_gateway.dashboard }}
            - --api=true
            - --api.dashboard=true
            - --api.insecure=true
{{- end }}
            - --entrypoints.http.address=:{{- .Values.api_gateway.httpPort }}
            - --entrypoints.https.address=:{{- .Values.api_gateway.httpsPort }}
            - --entryPoints.https.transport.respondingTimeouts.idleTimeout=7200
            - --entryPoints.https.transport.respondingTimeouts.readTimeout=7200
            - --entryPoints.https.transport.respondingTimeouts.writeTimeout=7200
            - --metrics=true
            - --metrics.prometheus=true
            - --metrics.prometheus.buckets=0.100000,0.300000,1.200000,5.000000
            - --metrics.prometheus.addEntryPointsLabels=true
            - --metrics.prometheus.addServicesLabels=true
            - --providers.file.filename=/etc/traefik/config/traefik.yaml
            - --ping=true
            - --ping.manualrouting=true
        resources:
{{ toYaml .Values.api_gateway.resources | indent 10 }}

        ports:
{{- if .Values.api_gateway.env.SSL }}
        - containerPort: {{ .Values.api_gateway.httpsPort }}
{{- end }}
        - containerPort: {{ .Values.api_gateway.httpPort }}

        # Readiness/liveness/startup probes
        livenessProbe:
          tcpSocket:
          failureThreshold: 3
          httpGet:
            path: /healthz
            port: {{ .Values.api_gateway.httpPort }}
          initialDelaySeconds: 5
          periodSeconds: 5
        readinessProbe:
          tcpSocket:
          failureThreshold: 1
          httpGet:
            path: /healthz
            port: {{ .Values.api_gateway.httpPort }}
          periodSeconds: 15
          initialDelaySeconds: 5
        startupProbe:
          failureThreshold: 30
          httpGet:
            path: /healthz
            port: {{ .Values.api_gateway.httpPort }}
          initialDelaySeconds: 5
          periodSeconds: 5

        volumeMounts:
        - name: api-gateway-traefik
          mountPath: /etc/traefik/config/traefik.yaml
          subPath: traefik.yaml
          readOnly: true
{{- if .Values.api_gateway.env.SSL }}
        - name: certs
          mountPath: /etc/traefik/certs
          readOnly: true
{{- end }}

{{- with .Values.api_gateway.nodeSelector }}
      nodeSelector: {{ toYaml . | nindent 8 }}
{{- end }}

      volumes:
      - name: api-gateway-traefik
        configMap:
          name: api-gateway-traefik
{{- if .Values.api_gateway.env.SSL }}
      - name: certs
        secret:
          secretName: api-gateway
{{- end }}

{{- if .Values.global.image.username }}
      imagePullSecrets:
      - name: docker-registry
{{- end }}
{{- end }}
