{{- if .Values.create_artifact_worker.enabled }}
{{- $context := dict "dot" .
    "override" .Values.create_artifact_worker
    "component" "create-artifact-worker" -}}
{{- $merged := merge (deepCopy .Values.create_artifact_worker) (deepCopy (default (dict) .Values.default)) -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "mender.fullname" . }}-create-artifact-worker
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "mender.labels" . | nindent 4 }}
    app.kubernetes.io/name: {{ include "mender.fullname" . }}-create-artifact-worker
    app.kubernetes.io/component: create-artifact-worker
spec:
  replicas: {{ .Values.create_artifact_worker.replicas }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "mender.fullname" . }}-create-artifact-worker

  # if deployment is not completed within 10 min, consider it failed,
  # as result deployment Reason=ProgressDeadlineExceeded
  # needs to be big enough to rollout to complete
  progressDeadlineSeconds: 600

  # Rollout upgrade
  {{- $updateStrategy := coalesce .Values.create_artifact_worker.updateStrategy .Values.default.updateStrategy }}
  {{- if $updateStrategy }}
  strategy: {{- toYaml $updateStrategy | nindent 4 }}
  {{- end }}

  template:
    metadata:
      {{- with .Values.create_artifact_worker.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        app.kubernetes.io/name: {{ include "mender.fullname" . }}-create-artifact-worker
        {{- include "mender.labels" . | nindent 8 }}
        app.kubernetes.io/component: create-artifact-worker
    spec:
      {{- with $merged.affinity }}
      affinity: {{ tpl (toYaml .) $ | nindent 8 }}
      {{- end }}
      {{- with $merged.tolerations }}
      tolerations: {{ tpl (toYaml .) $ | nindent 8 }}
      {{- end }}
{{- if .Values.create_artifact_worker.podSecurityContext.enabled }}
      securityContext: {{- omit .Values.create_artifact_worker.podSecurityContext "enabled" | toYaml | nindent 8 }}
{{- end }}

      containers:
      - name: create-artifact-worker
        image: {{ include "mender.image" $context }}
        imagePullPolicy: {{ include "mender.imagePullPolicy" $context }}
{{- if .Values.create_artifact_worker.containerSecurityContext.enabled }}
        securityContext: {{- omit .Values.create_artifact_worker.containerSecurityContext "enabled" | toYaml | nindent 10 }}
{{- end }}
        resources:
{{ toYaml .Values.create_artifact_worker.resources | indent 10 }}

{{- if .Values.create_artifact_worker.automigrate }}
        command: ["workflows", "--config", "/etc/workflows/config.yaml", "worker", "--automigrate"]
{{- else }}
        command: ["workflows", "--config", "/etc/workflows/config.yaml", "worker"]
{{- end }}

        # Supported configuration settings: https://github.com/mendersoftware/workflows/blob/master/config.yaml
        # Set in order, last value for the key will be used in case duplications.
        env:
        # NATS uri
        {{- if not .Values.global.nats.existingSecret }}
        - name: WORKFLOWS_NATS_URI
          value: {{ template "nats_uri" . }}
        {{- end }}

        - name: WORKFLOWS_MENDER_URL
          value: "{{ .Values.global.url }}"
        - name: CREATE_ARTIFACT_GATEWAY_URL
          value: {{ .Values.global.url | default (ternary (printf "https://%s" .Values.api_gateway.service.name ) (printf "http://%s" .Values.api_gateway.service.name) (.Values.api_gateway.env.SSL)) }}
        - name: CREATE_ARTIFACT_SKIPVERIFY
          value: "1"
        - name: CREATE_ARTIFACT_DEPLOYMENTS_URL
          value: http://{{ .Values.deployments.service.name }}:{{ .Values.deployments.service.port }}
        {{- include "mender.customEnvs" (merge (deepCopy .Values.create_artifact_worker) (deepCopy (default (dict) .Values.default))) | nindent 8 }}
        envFrom:
        - prefix: WORKFLOWS_
          secretRef:
            name: {{ .Values.global.mongodb.existingSecret | default "mongodb-common" }}

        {{- if .Values.global.nats.existingSecret }}
        - prefix: WORKFLOWS_
          secretRef:
            name: {{ .Values.global.nats.existingSecret }}
        {{- end }}

{{- if and .Values.global.image .Values.global.image.username }}
      imagePullSecrets:
      - name: docker-registry
{{- else }}
{{- $ips := coalesce .Values.create_artifact_worker.imagePullSecrets .Values.default.imagePullSecrets  }}
{{- if $ips }}
      imagePullSecrets:
{{- toYaml $ips | nindent 6 }}
{{- end }}
{{- end }}

{{- $pcn := coalesce .Values.create_artifact_worker.priorityClassName .Values.global.priorityClassName -}}
{{- if $pcn }}
      priorityClassName: {{ $pcn }}
{{- end -}}

{{- with .Values.create_artifact_worker.nodeSelector }}
      nodeSelector: {{ toYaml . | nindent 8 }}
{{- end }}
{{- end }}
