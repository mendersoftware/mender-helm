{{- if .Values.deployments.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: deployments
  namespace: {{ .Release.Namespace }}
  labels:
    app.kubernetes.io/name: deployments
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/component: deployments
    app.kubernetes.io/part-of: mender
    helm.sh/chart: "{{ .Chart.Name }}"
spec:
  replicas: {{ .Values.deployments.replicas }}
  selector:
    matchLabels:
      app.kubernetes.io/name: deployments

  # if deployment is not completed within 10 min, consider it failed,
  # as result deployment Reason=ProgressDeadlineExceeded
  # needs to be big enough to rollout to complete
  progressDeadlineSeconds: 600

  # Rollout upgrade one by one
  # In this case we warranty there are always instances online.
  # In case any issues, they will be detected early and deployment be stopped.
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1

  template:
    metadata:
      {{- with .Values.deployments.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        app.kubernetes.io/name: deployments
    spec:
      {{- with .Values.deployments.affinity }}
      affinity: {{ tpl (toYaml .) $ | nindent 8 }}
      {{- end }}
{{- if and (eq .Values.global.storage "aws") (.Values.global.s3.AWS_SERVICE_ACCOUNT_NAME) }}
      serviceAccountName: {{ .Values.global.s3.AWS_SERVICE_ACCOUNT_NAME }}
{{- end }}
      containers:
      - name: deployments
{{- if .Values.global.enterprise }}
        image: {{ .Values.deployments.image.registry | default "registry.mender.io" }}/{{ .Values.deployments.image.repository | default "mendersoftware/deployments-enterprise" }}:{{ .Values.deployments.image.tag }}
{{- else }}
        image: {{ .Values.deployments.image.registry | default "docker.io" }}/{{ .Values.deployments.image.repository | default "mendersoftware/deployments" }}:{{ .Values.deployments.image.tag }}
{{- end }}
        imagePullPolicy: {{ .Values.deployments.image.imagePullPolicy }}
        resources:
{{ toYaml .Values.deployments.resources | indent 10 }}

{{- if .Values.deployments.automigrate }}
        args: ["server", "--automigrate"]
{{- else -}}
        args: ["server"]
{{- end }}

        # Readiness/liveness probes
        readinessProbe:
          httpGet:
            path: /api/internal/v1/deployments/health
            port: 8080
          periodSeconds: 15
        livenessProbe:
          httpGet:
            path: /api/internal/v1/deployments/alive
            port: 8080
          periodSeconds: 5
        startupProbe:
          httpGet:
            path: /api/internal/v1/deployments/alive
            port: 8080
          failureThreshold: 36
          periodSeconds: 5

        env:
        - name: DEPLOYMENTS_STORAGE_DEFAULT
          value: {{ .Values.global.storage | quote }}
        - name: DEPLOYMENTS_MIDDLEWARE
          value: {{ .Values.deployments.env.DEPLOYMENTS_MIDDLEWARE | quote }}
        - name: DEPLOYMENTS_AWS_TAG_ARTIFACT
          value: {{ .Values.deployments.env.DEPLOYMENTS_AWS_TAG_ARTIFACT | quote }}
        - name: DEPLOYMENTS_PRESIGN_SECRET
          value: {{ .Values.deployments.env.DEPLOYMENTS_PRESIGN_SECRET | quote }}
{{- if and .Values.auditlogs.enabled .Values.global.enterprise }}
        - name: DEPLOYMENTS_ENABLE_AUDIT
          value: "true"
{{- end }}
        # Supported configuration settings: https://github.com/mendersoftware/deployments/blob/master/config.yaml
        # Set in order, last value for the key will be used in case duplications.
        envFrom:
        - prefix: DEPLOYMENTS_
          secretRef:
            name: mongodb-common
        - prefix: DEPLOYMENTS_
          secretRef:
            name: artifacts-storage

{{- if .Values.global.image.username }}
      imagePullSecrets:
      - name: docker-registry
{{- end }}

{{- with .Values.deployments.nodeSelector }}
      nodeSelector: {{ toYaml . | nindent 8 }}
{{- end }}
{{- end }}
